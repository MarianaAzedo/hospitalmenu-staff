{"ast":null,"code":"const HOST = 'http://0.0.0.0';\nconst PORT = 3000;\n\nconst GET = path => {\n  return FETCH('GET', path);\n};\n\n_c = GET;\n\nconst POST = (path, body) => {\n  return FETCH('POST', path, body && JSON.stringify(body));\n};\n\n_c2 = POST;\n\nconst FETCH = async (method, path, body) => {\n  const headers = new Headers();\n  headers.set('Content-Type', 'application/json');\n  headers.set('Accept', 'application/json');\n  const options = {\n    method,\n    mode: 'cors',\n    headers,\n    body\n  };\n  const promise = fetch(HOST + ':' + PORT + path, options);\n  return promise;\n};\n\n_c3 = FETCH;\nexport default {\n  GET,\n  POST\n};\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"GET\");\n$RefreshReg$(_c2, \"POST\");\n$RefreshReg$(_c3, \"FETCH\");","map":{"version":3,"sources":["/Users/marianaazedo/Desktop/hospitalmenu-staff/src/services/api.js"],"names":["HOST","PORT","GET","path","FETCH","POST","body","JSON","stringify","method","headers","Headers","set","options","mode","promise","fetch"],"mappings":"AAAA,MAAMA,IAAI,GAAG,gBAAb;AACA,MAAMC,IAAI,GAAG,IAAb;;AAEA,MAAMC,GAAG,GAAIC,IAAD,IAAU;AACpB,SAAOC,KAAK,CAAC,KAAD,EAAQD,IAAR,CAAZ;AACD,CAFD;;KAAMD,G;;AAIN,MAAMG,IAAI,GAAG,CAACF,IAAD,EAAOG,IAAP,KAAgB;AAC3B,SAAOF,KAAK,CAAC,MAAD,EAASD,IAAT,EAAeG,IAAI,IAAIC,IAAI,CAACC,SAAL,CAAeF,IAAf,CAAvB,CAAZ;AACD,CAFD;;MAAMD,I;;AAIN,MAAMD,KAAK,GAAG,OAAOK,MAAP,EAAeN,IAAf,EAAqBG,IAArB,KAA8B;AAC1C,QAAMI,OAAO,GAAG,IAAIC,OAAJ,EAAhB;AACAD,EAAAA,OAAO,CAACE,GAAR,CAAY,cAAZ,EAA4B,kBAA5B;AACAF,EAAAA,OAAO,CAACE,GAAR,CAAY,QAAZ,EAAsB,kBAAtB;AACA,QAAMC,OAAO,GAAG;AACdJ,IAAAA,MADc;AAEdK,IAAAA,IAAI,EAAE,MAFQ;AAGdJ,IAAAA,OAHc;AAIdJ,IAAAA;AAJc,GAAhB;AAOA,QAAMS,OAAO,GAAGC,KAAK,CAAChB,IAAI,GAAG,GAAP,GAAaC,IAAb,GAAoBE,IAArB,EAA2BU,OAA3B,CAArB;AACA,SAAOE,OAAP;AACD,CAbD;;MAAMX,K;AAeN,eAAe;AAAEF,EAAAA,GAAF;AAAOG,EAAAA;AAAP,CAAf","sourcesContent":["const HOST = 'http://0.0.0.0';\nconst PORT = 3000;\n\nconst GET = (path) => {\n  return FETCH('GET', path);\n};\n\nconst POST = (path, body) => {\n  return FETCH('POST', path, body && JSON.stringify(body));\n};\n\nconst FETCH = async (method, path, body) => {\n  const headers = new Headers();\n  headers.set('Content-Type', 'application/json');\n  headers.set('Accept', 'application/json');\n  const options = {\n    method,\n    mode: 'cors',\n    headers,\n    body,\n  };\n\n  const promise = fetch(HOST + ':' + PORT + path, options);\n  return promise;\n};\n\nexport default { GET, POST };\n"]},"metadata":{},"sourceType":"module"}