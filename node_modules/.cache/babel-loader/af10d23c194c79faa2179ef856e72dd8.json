{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/marianaazedo/Desktop/hospitalmenu-staff/src/components/header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { UserService } from '../services/';\n\nconst Header = props => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  useEffect(() => {\n    const configureUserName = async () => {\n      const user = await UserService.getUser();\n      setUsername(user.name);\n    };\n\n    configureUserName();\n    return () => {};\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: [\" Header here - \", username, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Header, \"vvPqiwmcocEAjsjiwnE6bJ+J4Yk=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/marianaazedo/Desktop/hospitalmenu-staff/src/components/header.js"],"names":["React","useState","useEffect","UserService","Header","props","username","setUsername","configureUserName","user","getUser","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,cAA5B;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,iBAAiB,GAAG,YAAY;AACpC,YAAMC,IAAI,GAAG,MAAMN,WAAW,CAACO,OAAZ,EAAnB;AACAH,MAAAA,WAAW,CAACE,IAAI,CAACE,IAAN,CAAX;AACD,KAHD;;AAKAH,IAAAA,iBAAiB;AACjB,WAAO,MAAM,CAAE,CAAf;AACD,GARQ,EAQN,EARM,CAAT;AAUA,sBAAO;AAAA,kCAAwBF,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAbD;;GAAMF,M;;KAAAA,M;AAeN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { UserService } from '../services/';\n\nconst Header = (props) => {\n  const [username, setUsername] = useState('');\n  useEffect(() => {\n    const configureUserName = async () => {\n      const user = await UserService.getUser();\n      setUsername(user.name);\n    };\n\n    configureUserName();\n    return () => {};\n  }, []);\n\n  return <header> Header here - {username} </header>;\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}